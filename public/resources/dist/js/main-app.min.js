function isEmpty(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}var bookApp=angular.module("bookApp",["ngRoute"]);bookApp.controller("addressController",["$scope","authorizeService","crudAddress",function(a,b,c){a.oldAddress=!0,a.userAddress=b.user.addresses,a.address={},a.toggleNewAddress=function(){a.showNewAddress?(a.showNewAddress=!1,a.oldAddress=!0):(a.showNewAddress=!0,a.oldAddress=!1)},a.addNewAddress=function(){c.addAddress(b.user._id,a.address),a.showNewAddress=!1,a.oldAddress=!0},a.$on("updateAddress",function(d,e){a.userAddress=c.userAddress,b.user.addresses=a.userAddress})}]),bookApp.controller("headerController",["$scope","$location","$timeout","authorizeService",function(a,b,c,d){a.alreadySignIn=!1,a.isActive=function(a){return a==b.path()},a.userAuthenticated=!0,b.path("/book"),a.showLoginForm=function(){a.headerMsg="Login",a.modalVisible=!0,a.setLoginView(!0,!1,!1)},a.closeModal=function(){a.modalVisible=!1},a.showRegisterForm=function(){a.headerMsg="Register",a.setLoginView(!1,!0,!1)},a.registerNewUser=function(){d.registerNewUser(a.regEmail,a.regPassword,a.regTel)},a.login=function(){d.login(a.logEmail,a.logPassword)},a.$on("loginStatus",function(b,e){switch(console.log(e),a.setLoginView(!1,!1,!0),e){case 200:a.loginRegisterStatusMessage="Login Successful",c(function(){a.modalVisible=!1,a.user=d.user.email.split("@"),a.user=a.user[0],console.log(a.user),a.alreadySignIn=!0},1500);break;case 204:a.loginRegisterStatusMessage="Email not found, Please try again",c(function(){a.setLoginView(!0,!1,!1)},1500);break;case 412:a.loginRegisterStatusMessage="Invalid password, Please try again",c(function(){a.setLoginView(!0,!1,!1)},1500)}}),a.$on("registerStatus",function(b,d){switch(a.setLoginView(!1,!1,!0),d){case 200:a.loginRegisterStatusMessage="Successfully registered, please login in",c(function(){a.setLoginView(!0,!1,!1)},1500);break;case 409:a.loginRegisterStatusMessage="User Already exists!",c(function(){a.setLoginView(!1,!0,!1)},1500)}}),a.setLoginView=function(b,c,d){a.alreadyLogin=b,a.registerHere=c,a.loginRegisterStatus=d}}]),bookApp.controller("kartController",["$scope","$location","kartService","getBookItemService","authorizeService","crudAddress",function(a,b,c,d,e,f){a.kartBooks=c.kartBooks,a.totalPrice=c.updateTotalPrice(),a.removeFromKart=function(b){for(var e=0;e<c.kartBooks.length;e++)c.kartBooks[e]._id==b._id&&c.kartBooks.splice(e,1);a.totalPrice=c.updateTotalPrice();for(var e=0;e<d.allBooks.length;e++)d.allBooks[e]._id==b._id&&(d.allBooks[e].disabled=!1,d.allBooks[e].status="Add to Kart")},a.buyBooks=function(){return c.fromKart=!0,e.user.signedIn?0==c.kartBooks.length?void alert("Add books to Kart"):void(isEmpty(f.selectedAddress)?b.path("/address"):b.path("/order")):void alert("Please sign-in to continue")}}]);var Obj=function(a,b,c,d,e,f,g,h,i){this._id=a,this.author=b,this.awards=c,this.bookName=d,this.description=e,this.disabled=f,this.img=g,this.price=h,this.published=i,this.quantity=1};bookApp.controller("mainController",["$scope","$location","getBookItemService","kartService",function(a,b,c,d){0==c.allBooks.length?c.getBookData():a.books=c.allBooks,a.$on("bookDataReceived",function(b,d){a.books=c.allBooks;for(var e=0;e<a.books.length;e++)a.books[e].disabled=!1,a.books[e].status="Add to Kart"}),a.addToKart=function(a){var b=new Obj(a._id,a.author,a.awards,a.bookName,a.description,a.disabled,a.img,a.price,a.published);d.addKart(b);for(var e=0;e<c.allBooks.length;e++)c.allBooks[e]._id==a._id&&(c.allBooks[e].disabled=!0,c.allBooks[e].status="In Kart")}}]),bookApp.controller("myOrderController",["$scope","$location","authorizeService","getBookItemService","orderService","kartService",function(a,b,c,d,e,f){c.user.signedIn||(alert("Please sign in to continue"),b.path("/book")),c.getUserById(c.user._id),a.$on("updatedUser",function(b,d){a.myOrders=c.user.orders}),a.myOrder={},a.showOrderDetails=function(b){a.myOrder=b;for(var c=[],e=0;e<b.book.length;e++)c.push(b.book[e]._id);d.getBookById(c)},a.$on("orderedBooksReceived",function(c,g){for(var h=0;h<a.myOrder.book.length;h++)for(var i=0;i<d.orderedBooks.length;i++)a.myOrder.book[h]._id==d.orderedBooks[i]._id&&(a.myOrder.book[h].bookName=d.orderedBooks[i].bookName,a.myOrder.book[h].price=d.orderedBooks[i].price);f.fromKart=!1,e.selectedOrder._id=a.myOrder._id,e.selectedOrder.book=a.myOrder.book,e.selectedOrder.address=a.myOrder.address,e.selectedOrder.totalPrice=a.myOrder.price,e.selectedOrder.status=a.myOrder.status,b.path("/order")})}]),bookApp.controller("orderController",["$scope","$location","kartService","crudAddress","authorizeService","orderService",function(a,b,c,d,e,f){a.displayOrdSumm=!0,c.fromKart?(a.orderedBooks=c.kartBooks,a.selectedAddress=d.selectedAddress,a.totalPrice=c.totalPrice,a.createOrder=!0):(a.orderId="ORD"+f.selectedOrder._id,a.orderedBooks=f.selectedOrder.book,a.selectedAddress=f.selectedOrder.address,a.totalPrice=f.selectedOrder.totalPrice,a.createOrder=!1,a.status=f.selectedOrder.status,"Cancelled"==a.status||"Delivered"==a.status?a.valid=!1:a.valid=!0),a.changeAddress=function(){b.path("/address")},a.addOrder=function(){for(var a=e.user._id,b=[],g=0;g<c.kartBooks.length;g++)b.push({_id:c.kartBooks[g]._id,quantity:c.kartBooks[g].quantity});var h=d.selectedAddress._id;f.addOrder(a,b,h,c.totalPrice,"Received")},a.cancelOrder=function(){f.cancelOrder(f.selectedOrder._id)},a.$on("updateOrder",function(b,c){a.displayOrdSumm=!1,a.orderSummaryId="ORD"+f.recentOrder._id}),a.$on("cancelledOrder",function(b,c){a.status="Cancelled",a.valid=!1})}]),bookApp.directive("addressItem",["$location","crudAddress",function(a,b){return{restrict:"E",replace:!0,templateUrl:"/resources/directive/address-item.htm",scope:{obj:"="},link:function(c,d,e){var f=angular.element(d[0].querySelector(".delivery-btn"));f.on("click",function(){b.selectedAddress=c.obj,a.path("/order"),c.$apply()})}}}]),bookApp.directive("bookItem",function(){return{restrict:"E",replace:!0,templateUrl:"/resources/directive/book-item.htm",scope:{obj:"=",addToKart:"&"}}}),bookApp.directive("kartItem",["kartService",function(a){return{restrict:"E",replace:!0,templateUrl:"/resources/directive/kart-item.htm",scope:{obj:"=",removeFromKart:"&"},transclude:!0,link:function(b,c,d){for(var e=0;e<a.kartBooks.length;e++)if(a.kartBooks[e]._id==b.obj._id)var f=a.kartBooks[e].quantity;var g=angular.element(c[0].querySelector(".decrement")),h=angular.element(c[0].querySelector(".increment"));g.on("click",function(){f>1&&f--;for(var c=0;c<a.kartBooks.length;c++)a.kartBooks[c]._id==b.obj._id&&(a.kartBooks[c].quantity=f,b.$apply());$("#totalPrice").html("₹"+parseFloat(a.updateTotalPrice()).toFixed(2))}),h.on("click",function(){f++;for(var c=0;c<a.kartBooks.length;c++)a.kartBooks[c]._id==b.obj._id&&(a.kartBooks[c].quantity=f,b.$apply());$("#totalPrice").html("₹"+parseFloat(a.updateTotalPrice()).toFixed(2))})}}}]),bookApp.directive("orderItem",function(){return{restrict:"E",replace:!0,templateUrl:"/resources/directive/order-item.htm",scope:{obj:"=",showOrderDet:"&"}}}),bookApp.config(["$routeProvider",function(a){a.when("/book",{templateUrl:"/resources/pages/book.htm",controller:"mainController"}).when("/kart",{templateUrl:"/resources/pages/kart.htm",controller:"kartController"}).when("/address",{templateUrl:"/resources/pages/address.htm",controller:"addressController"}).when("/order",{templateUrl:"/resources/pages/order.htm",controller:"orderController"}).when("/myorder",{templateUrl:"/resources/pages/myorder.htm",controller:"myOrderController"})}]),bookApp.service("authorizeService",["$http","$rootScope",function(a,b){var c=this;c.user={},this.registerNewUser=function(c,d,e){a.post("/createUser",{email:c,password:d,mobile:e}).success(function(a){b.$broadcast("registerStatus",200)}).error(function(a,c){b.$broadcast("registerStatus",c)})},this.login=function(d,e){a.post("/checkUser",{email:d,password:e}).success(function(a){var e=0;a.email==d?(e=200,c.user=a,c.user.signedIn=!0):""==a&&(e=204),b.$broadcast("loginStatus",e)}).error(function(a,c){b.$broadcast("loginStatus",c)})},this.getNewUser=function(){return c.user},this.getUserById=function(d){a.post("/getUserById",{_id:d}).success(function(a){c.user=a,c.user.signedIn=!0,b.$broadcast("updatedUser")}).catch(function(a,b){console.log(a)})}}]),bookApp.service("crudAddress",["$http","$rootScope",function(a,b){var c=this;c.userAddress={},this.selectedAddress={},this.addAddress=function(d,e){a.post("/addAddress",{_id:d,address:e}).success(function(a){c.userAddress=a.addresses,b.$broadcast("updateAddress")}).error(function(a,b){console.log(b)})}}]),bookApp.service("getBookItemService",["$rootScope","$http",function(a,b){var c=this;c.allBooks=[],c.orderedBooks={},c.getBookData=function(){b.get("/getBookData?skip=0&offset=10").success(function(b){c.allBooks=b,a.$broadcast("bookDataReceived")}).error(function(a,b){console.log(b)})},c.getBookById=function(d){b.post("/getBookById",{_id:d}).success(function(b){c.orderedBooks=b,a.$broadcast("orderedBooksReceived")}).error(function(a,b){console.log(b)})}}]),bookApp.service("kartService",function(){this.fromKart=!0,this.kartBooks=[],this.addKart=function(a){this.kartBooks.push(a)},this.updateTotalPrice=function(){this.totalPrice=0;for(var a=0;a<this.kartBooks.length;a++)this.totalPrice+=this.kartBooks[a].price*this.kartBooks[a].quantity;return this.totalPrice}}),bookApp.service("orderService",["$http","$rootScope",function(a,b){var c=this;c.recentOrder={},c.selectedOrder={},c.addOrder=function(d,e,f,g,h){a.post("/addOrder",{userId:d,bookId:e,addressId:f,totalPrice:g,status:h}).success(function(a){c.recentOrder=a,console.log(c.recentOrder),b.$broadcast("updateOrder")}).catch(function(a,b){console.log(a)})},c.getOrderDetails=function(b){a.post("/getOrderDetails",{_id:b}).success(function(a){console.log(respone)}).catch(function(a,b){console.log(a)})},c.cancelOrder=function(c){a.post("/updateOrderById",{_id:c,status:"Cancelled"}).success(function(a){b.$broadcast("cancelledOrder")}).catch(function(a,b){})}}]);